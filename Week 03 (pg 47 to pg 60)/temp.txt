3. Enhance a Utility class from session no 7 by adding three more static methods. which overload existing Sort () which accepts an array of double to sort them, findSmallest () which accepts an array of double to find smallest value, findLargest () which accepts an array of double to find largest value Access overloading methods from main () of Demo class of different package. (Take input through command line.)
4. Create a class GeometricShape with three overloaded methods findArea () to find area of square, rectangle, and circle, and modularize at method, class, and package level. (Hint: To find area of a square pass an integer value and to find a circle pass a double value)
5. Create a class GeometricShape with three overloaded methods findPerimeter () to find perimeter of square, rectangle, and circle. and modularize at method, class, and package level.

Note: To find perimeter of a square pass an integer value and to find a circle pass a double value
6. Enhance the class Palindrome of Problem W02-P04 with another static method isPalindrome() to check whether an each element array is palindrome or not. If all the elements in the array are palindrome numbers then return true otherwise, return false. Access them using main () from the same class. (Take hard coded value for the variable n)
 ------- pg 60